#!/usr/bin/perl
use strict;

sub naturalize {
    return
        join "",
            map {
                ! m/\d/                     # if no digits in string
                    ? $_                    #    then just keep it
                    : sprintf "%.*d",       #    else print digits with precision
                        $_[1] ? $_[1] : 16, #        precison is as specified or default 16
                        $_                  #        digits as seen
            }
            split /(\d+)/,                  # split by breaks in digits
            $_[0]                           # look at first string 
}
sub natsort    {
    return
        map  { $_->[0] }                    # convert back to original entries
        sort { $a->[1] cmp $b->[1] }        # perform usual string sort using the sortkey
        map  { [ $_, naturalize($_) ] }     # convert entries to an array reference with original value and naturalized sortkey appended
        @_                                  # start with arg entries
}
print
    join "",
    natsort                                 # sort 'naturally'
    <>;                                     # read all the lines in mem (caveat - better fit!)
